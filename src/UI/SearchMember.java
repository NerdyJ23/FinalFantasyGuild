/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Console.Trace;
import Data.DAL;
import Data.ParseClass;
import Data.SearchTableModel;
import Objects.Player;
import Objects.Staff;
import Validation.ValidateInputs;
import com.sun.glass.events.KeyEvent;
import java.awt.Component;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 * Search for Member form
 * @author Jessica Moolenschot
 */
public class SearchMember extends javax.swing.JFrame implements ListSelectionListener, WindowListener
{
    DAL database;
    SearchTableModel m;
    TableColumnModel view;
    /**
     * Creates new form SearchMember
     */
    public SearchMember()
    {
        initComponents();

        database = new DAL();
        m = new SearchTableModel();
        tableMembers.setModel(m);
        tableMembers.updateUI();
        tableMembers.getSelectionModel().addListSelectionListener(this);
        ParseClass p = new ParseClass();
        tableMembers.getColumnModel().getColumn(6).setCellRenderer(p);
        resizeTable();
        tableMembers.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
    /**
     * Resizes the JTable Cells based on their content
     */
    public void resizeTable()
    {
        //https://stackoverflow.com/questions/17627431/auto-resizing-the-jtable-column-widths
         view = tableMembers.getColumnModel();
        for(int column = 0; column < tableMembers.getColumnCount(); column ++)//resizes the cells based on the content and header widths
        {
            int width = 100; //min width
            for(int row = 0; row < tableMembers.getRowCount(); row++)
            {
                TableCellRenderer renderer = tableMembers.getCellRenderer(row,column);
                Component c = tableMembers.prepareRenderer(renderer,row,column);
                width = Math.max(width, c.getPreferredSize().width);//tableMembers.getColumnModel().getColumn(column).getPreferredWidth());
                if(column == 6)
                {
                    int height = tableMembers.getRowHeight(row);
                    //Trace.log("Height is " + height);
                    height = Math.max(c.getPreferredSize().height,20);
                    
                    tableMembers.setRowHeight(row,height);
                }
            }
            view.getColumn(column).setPreferredWidth(width);
        }
        tableMembers.updateUI();
    }
    @Override
    /**
     * Fires when user selects a different row, enables the edit/delete button
     */
    public void valueChanged(ListSelectionEvent e)
    {
        //https://stackoverflow.com/questions/375265/jtable-selection-change-event-handling-find-the-source-table-dynamically
        if(!e.getValueIsAdjusting())
        {
            Trace.log("row selected");
            btnEdit.setEnabled(true);
            btnDelete.setEnabled(true);
        }
    }
    @Override
    /**
     * Re-enable this window when the child window closes and set the Guild JComboBox to the last value
     */
    public void windowClosed(WindowEvent e)
    {
        this.setEnabled(true);
        this.setVisible(true);
        search();
    }
    @Override
    public void windowDeactivated(WindowEvent e){}
    @Override
    public void windowActivated(WindowEvent e){}
    @Override
    public void windowDeiconified(WindowEvent e){}
    @Override
    public void windowIconified(WindowEvent e){}
    @Override
    public void windowClosing(WindowEvent e){}
    @Override public void windowOpened(WindowEvent e){}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ddlCharacterRole = new javax.swing.JComboBox<>();
        warnSearch = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMembers = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ddlMemberRole = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search for Member");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 15, 0, 15, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel1.setText("First Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtFirstNameKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(txtFirstName, gridBagConstraints);

        jLabel3.setText("Last Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        txtLastName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtLastNameActionPerformed(evt);
            }
        });
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtLastNameKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(txtLastName, gridBagConstraints);

        jLabel5.setText("Character Role:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        ddlCharacterRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "DPS", "Healer", "Tank" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(ddlCharacterRole, gridBagConstraints);

        warnSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        warnSearch.setForeground(new java.awt.Color(102, 102, 102));
        warnSearch.setText("Input information into one or more fields to search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(warnSearch, gridBagConstraints);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        jPanel1.add(btnSearch, gridBagConstraints);

        tableMembers.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        tableMembers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        tableMembers.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableMembers.setRowHeight(50);
        jScrollPane1.setViewportView(tableMembers);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 500;
        gridBagConstraints.ipady = 250;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 15);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Yu Gothic Light", 0, 24)); // NOI18N
        jLabel4.setText("Search for Member");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 5);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel6.setText("Member Role:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        ddlMemberRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Player", "Administrator", "Enforcer" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(ddlMemberRole, gridBagConstraints);

        btnEdit.setText("Edit");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(btnEdit, gridBagConstraints);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(btnCancel, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(btnDelete, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Closes window
     * @param evt MouseClick
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    /**
     * Opens the EditMember form
     * @param evt ActionEvent
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEditActionPerformed
    {//GEN-HEADEREND:event_btnEditActionPerformed
        int memberID = Integer.parseInt(tableMembers.getModel().getValueAt(tableMembers.getSelectedRow(), 0).toString());//ONCE AGAIN WORKED FIRST TRY????
        EditMember a = new EditMember(memberID);
        a.setLocationRelativeTo(this);
        a.addWindowListener(this);
        this.setEnabled(false);
        a.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed
    /**
     * Search for Member, filtered by ONE OR MORE fields
     */
    public void search()
    {
        String sql = "SELECT * FROM members WHERE ";
        boolean first = true;
        if(ValidateInputs.validateFirstName(txtFirstName.getText()))
        {
            sql += "LOWER(firstName) LIKE '" + txtFirstName.getText().toLowerCase() + "%' ";
            first = false;
        }
        if(ValidateInputs.validateLastName(txtLastName.getText()))
        {
            if(!first)
                sql += " AND ";
            sql += "LOWER(lastName) LIKE '" + txtLastName.getText().toLowerCase() + "%'";
            first = false;
        }
        if(ddlCharacterRole.getSelectedIndex() != 0)
        {
            if(!first)
                sql += " AND ";
            sql += "characterRole = '" + ddlCharacterRole.getSelectedItem().toString() + "'";
            first = false;
        }
        switch(ddlMemberRole.getSelectedIndex())
        {
            case 0://if player
                if(!first)
                    sql += "AND ";
                sql+="playerRole IS NULL";
                break;
            default:
                if(!first)
                    sql += "AND ";
                sql+= "playerRole = '" + ddlMemberRole.getSelectedItem() + "'";
                break;
        }

        m.getMembers(sql);
        resizeTable();
        //ResultSet r = database.executeQuery(sql);
    }
    /**
     * Search for Member, filtered by ONE OR MORE fields
     * @param evt 
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchActionPerformed
    {//GEN-HEADEREND:event_btnSearchActionPerformed
        search();
    }//GEN-LAST:event_btnSearchActionPerformed
    /**
     * Search for Member, filtered by ONE OR MORE fields
     * @param evt 
     */
    private void txtFirstNameKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtFirstNameKeyPressed
    {//GEN-HEADEREND:event_txtFirstNameKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER)
           search();
    }//GEN-LAST:event_txtFirstNameKeyPressed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtLastNameActionPerformed
    {//GEN-HEADEREND:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed
    /**
     * Search for Member, filtered by ONE OR MORE fields
     * @param evt 
     */
    private void txtLastNameKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtLastNameKeyPressed
    {//GEN-HEADEREND:event_txtLastNameKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER)
           search();
    }//GEN-LAST:event_txtLastNameKeyPressed
/**
 * Delete selected Member from the database
 * @param evt 
 */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteActionPerformed
    {//GEN-HEADEREND:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Object o = m.getMemberByRow(tableMembers.getSelectedRow());
        int option = JOptionPane.showConfirmDialog(this, "Delete member " +  o.toString(), "Confirm delete", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        
        if(option == JOptionPane.YES_OPTION)
        {
            int memberID = o.getClass() == Player.class ? ((Player)o).getMemberID() : ((Staff)o).getMemberID();
            database.deleteMember(memberID);
            JOptionPane.showMessageDialog(this, "Deleted member successfully","Deleted",JOptionPane.INFORMATION_MESSAGE);
            search();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Cancelled deletion","Cancelled",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> ddlCharacterRole;
    private javax.swing.JComboBox<String> ddlMemberRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMembers;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JLabel warnSearch;
    // End of variables declaration//GEN-END:variables
}
