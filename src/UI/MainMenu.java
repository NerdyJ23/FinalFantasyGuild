/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Console.Trace;
import Data.DAL;
import File.InputOutput;
import Objects.Guild;
import Objects.Player;
import Objects.Staff;
import java.awt.Desktop;
import java.awt.FileDialog;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Main landing page for the Application
 * @author Jessica Moolenschot
 */
public class MainMenu extends javax.swing.JFrame implements WindowListener
{
    /**
     * Default Constructor, initalizes the look and feel and icon
     */
    public MainMenu()
    {
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Guild Backup",".gld");
        
        /*String output = ""; //get serverlist easy for mockaroo
        for (String[] AMERICA : ServerList.AMERICA)
        {
            for (String s : AMERICA)
            {
                output += s + ",";
            }
        }
        for (String[] EUROPE : ServerList.EUROPE)
        {
            for (String s : EUROPE)
            {
                output += s + ",";
            }
        }
        for (String[] JAPAN : ServerList.AMERICA)
        {
            for (String s : JAPAN)
            {
                output += s + ",";
            }
        }
        Trace.log(output);*/
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            ImageIcon i = new ImageIcon("./src/img/ff14icon.jpg");
            this.setIconImage(i.getImage());
        }
        catch(ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e)
        {
            Trace.error("Could not set look and feel");
        }
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        MainContainer = new javax.swing.JPanel();
        Banner = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        bnAddTeam = new javax.swing.JButton();
        btnViewTeams = new javax.swing.JButton();
        btnAddMember = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuBackup = new javax.swing.JMenuItem();
        menuLoad = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        chkDebug = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Guild Manager");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        MainContainer.setBackground(new java.awt.Color(255, 255, 255));
        MainContainer.setLayout(new java.awt.GridBagLayout());

        Banner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Banner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Banner.jpg"))); // NOI18N
        Banner.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Banner.setDoubleBuffered(true);
        Banner.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        MainContainer.add(Banner, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Guild Manager");
        jLabel1.setDoubleBuffered(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 16, 0);
        MainContainer.add(jLabel1, gridBagConstraints);

        jPanel1.setBackground(MainContainer.getBackground());
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout);

        btnSearch.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        btnSearch.setText("Search For Member");
        btnSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btnSearch, gridBagConstraints);

        bnAddTeam.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        bnAddTeam.setText("Add Guild");
        bnAddTeam.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bnAddTeamActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(bnAddTeam, gridBagConstraints);

        btnViewTeams.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        btnViewTeams.setText("View Guilds");
        btnViewTeams.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnViewTeamsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 35;
        jPanel1.add(btnViewTeams, gridBagConstraints);

        btnAddMember.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        btnAddMember.setText("Add Member");
        btnAddMember.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnAddMemberMouseClicked(evt);
            }
        });
        btnAddMember.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddMemberActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 22, 0);
        jPanel1.add(btnAddMember, gridBagConstraints);

        btnHelp.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnHelpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btnHelp, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 7;
        MainContainer.add(jPanel1, gridBagConstraints);

        getContentPane().add(MainContainer, java.awt.BorderLayout.CENTER);

        jMenuBar1.setDoubleBuffered(true);

        jMenu1.setText("File");

        menuBackup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuBackup.setText("Backup Database...");
        menuBackup.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuBackupActionPerformed(evt);
            }
        });
        jMenu1.add(menuBackup);

        menuLoad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuLoad.setText("Load from File...");
        menuLoad.setToolTipText("Load database from local file");
        menuLoad.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuLoadActionPerformed(evt);
            }
        });
        jMenu1.add(menuLoad);
        jMenu1.add(jSeparator1);

        chkDebug.setText("DefaultValuesForBugtesting");
        chkDebug.setEnabled(false);
        jMenu1.add(chkDebug);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Fires when the MenuBar Load button is clicked, will load database from backup file
     * @param evt ActionEvent
     */
    private void menuLoadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuLoadActionPerformed
    {//GEN-HEADEREND:event_menuLoadActionPerformed
        //https://stackoverflow.com/questions/7211107/how-to-use-filedialog
        
        FileDialog chooser = new FileDialog(this,"Choose backup file",FileDialog.LOAD);
        chooser.setDirectory(System.getProperty("user.dir"));
        chooser.setFile("*.gld"); //this doesnt work on macOS 
        chooser.setFilenameFilter(new FilenameFilter() { //and this one doesnt work on windows :think:
            @Override
            public boolean accept(File dir, String name) {return name.endsWith(".gld");}
        });
        
        chooser.setVisible(true);
        String file = chooser.getFile();
        String dir = chooser.getDirectory();
        String filename = chooser.getDirectory() + chooser.getFile();
        Trace.log("Returned " + filename);
        if(file != null)
        {            
            String extension = filename.split("\\.")[1];
            Trace.log(extension);
            if(extension.equals("gld"))
            {
                ArrayList<Object> backup = InputOutput.readFromFile(filename);
                DAL database = new DAL();

                int guildCount = 0;
                int memberCount = 0;
                database.wipeDatabase();
                for(Object o : backup)
                {
                    if(o.getClass() == Guild.class)
                    {
                        database.addGuild((Guild)o);
                        guildCount++;
                    }
                    else if(o.getClass() == Player.class || o.getClass() == Staff.class)
                    {
                        database.addMember(o);
                        memberCount++;
                    }
                }
                JOptionPane.showMessageDialog(this, String.format("Successfully loaded %s guilds and %s members",guildCount,memberCount), "Loaded successfully", JOptionPane.INFORMATION_MESSAGE);
                database.close();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Invalid file!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_menuLoadActionPerformed

    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddMemberActionPerformed
    {//GEN-HEADEREND:event_btnAddMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddMemberActionPerformed
    /**
     * Opens the AddMember form
     * @param evt MouseClick
     */
    private void btnAddMemberMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnAddMemberMouseClicked
    {//GEN-HEADEREND:event_btnAddMemberMouseClicked
        // TODO add your handling code here:
        AddMember a = new AddMember();
        a.setLocationRelativeTo(this);
        a.addWindowListener(this);
        //this.setState(Frame.ICONIFIED);
        this.setEnabled(false);
        a.setVisible(true);
    }//GEN-LAST:event_btnAddMemberMouseClicked
    /**
     * Opens the AddTeam form
     * @param evt MouseClick
     */
    private void bnAddTeamActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bnAddTeamActionPerformed
    {//GEN-HEADEREND:event_bnAddTeamActionPerformed
        // TODO add your handling code here:
        AddTeam a = new AddTeam();
        a.setLocationRelativeTo(this);
        a.addWindowListener(this);
        this.setEnabled(false);
        a.setVisible(true);
    }//GEN-LAST:event_bnAddTeamActionPerformed
    /**
     * Opens the ViewTeam form
     * @param evt MouseClick
     */
    private void btnViewTeamsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnViewTeamsActionPerformed
    {//GEN-HEADEREND:event_btnViewTeamsActionPerformed
        // TODO add your handling code here:
        ViewTeams a = new ViewTeams();
        a.setLocationRelativeTo(this);
        a.addWindowListener(this);
        this.setEnabled(false);
        a.setVisible(true);
    }//GEN-LAST:event_btnViewTeamsActionPerformed
    /**
     * Fires when the MenuBar Backup button is pressed, backs up database to selected .gld file
     * @param evt MouseClick
     */
    private void menuBackupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuBackupActionPerformed
    {//GEN-HEADEREND:event_menuBackupActionPerformed
        InputOutput r = new InputOutput();
        
        FileDialog save = new FileDialog(this,"Backup Database",FileDialog.SAVE);
        save.setDirectory(System.getProperty("user.dir"));
        save.setFile("*.gld");
        
        save.setFilenameFilter(new FilenameFilter() { //and this one doesnt work on windows :think:
            @Override
            public boolean accept(File dir, String name) {return name.endsWith(".gld");}
        });
        save.setVisible(true);
        String path = save.getDirectory();
        String file = save.getFile();
        
        if(file != null)
        {
            String[] fileExploded = file.split("\\.");
            if(fileExploded.length == 1)
                file = file + "." + "gld";
            else
                file = file + "." + fileExploded[1];
            
            String URI = path + file;

            DAL database = new DAL();

            ArrayList<Guild> guilds = new ArrayList<>();
            guilds = database.getGuilds();
            ArrayList<Object> members = new ArrayList<>();
            members = database.getMembers();
            InputOutput.overrideFile(URI);
            for(Guild g : guilds)
            {
                r.appendToFile(g, URI);
            }
            for(Object o : members)
            {
                r.appendToFile(o, URI);
            }
            //r.appendToFile(r, BACKUP);

            JOptionPane.showMessageDialog(this, String.format("Saved %s guilds and %s members", guilds.size(),members.size()), "Saved successfully", JOptionPane.INFORMATION_MESSAGE);
            database.close();
            
        }
    }//GEN-LAST:event_menuBackupActionPerformed
    /**
     * Opens the SearchMember form
     * @param evt MouseClick
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchActionPerformed
    {//GEN-HEADEREND:event_btnSearchActionPerformed
        // TODO add your handling code here:
        SearchMember a = new SearchMember();
        a.setLocationRelativeTo(this);
        a.addWindowListener(this);
        this.setEnabled(false);
        a.setVisible(true);
    }//GEN-LAST:event_btnSearchActionPerformed
    /**
     * Opens the Help PDF in the local machine's default opening program
     */
    public void displayHelp()
    {
        String err = "";
        try
        {
            URI uri = new URI("Tutorial.pdf");
            Desktop d = null;
            if(Desktop.isDesktopSupported())
                d = Desktop.getDesktop();
            
            if( d!= null)
                d.browse(uri);
        }
        catch(IOException e)
        {
            err = "Could not find help file!";
            Trace.error(err);
            Trace.error(e.getMessage());
        }
        catch(URISyntaxException e)
        {
            err = "URI syntax invalid";
            Trace.error(err);
            Trace.error(e.getMessage());
        }
        if(!err.isEmpty())
            JOptionPane.showMessageDialog(this, err,"Error",JOptionPane.ERROR_MESSAGE);
    }
    /**
     * Opens the Help PDF in the local machine's default opening program
     */
    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnHelpActionPerformed
    {//GEN-HEADEREND:event_btnHelpActionPerformed
        displayHelp();
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainMenu().setVisible(true);
            }
        });
    }
    public boolean debugOn()
    {
        return chkDebug.isSelected();
    }
    @Override
    /**
     * Re-enable this window when the child window closes and set the Guild JComboBox to the last value
     */
    public void windowClosed(WindowEvent e)
    {
        this.setEnabled(true);
        this.setVisible(true);
    }
    @Override
    public void windowDeactivated(WindowEvent e){}
    @Override
    public void windowActivated(WindowEvent e){}
    @Override
    public void windowDeiconified(WindowEvent e){}
    @Override
    public void windowIconified(WindowEvent e){}
    @Override
    public void windowClosing(WindowEvent e){}
    @Override public void windowOpened(WindowEvent e){}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Banner;
    private javax.swing.JPanel MainContainer;
    private javax.swing.JButton bnAddTeam;
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewTeams;
    private javax.swing.JCheckBoxMenuItem chkDebug;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menuBackup;
    private javax.swing.JMenuItem menuLoad;
    // End of variables declaration//GEN-END:variables
}
